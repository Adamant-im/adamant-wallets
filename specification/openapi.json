{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Adamant-wallets"
  },
  "paths": {},
  "components": {
    "schemas": {
      "TokenGeneral": {
        "type": "object",
        "required": [
          "name",
          "website",
          "description",
          "explorer",
          "explorerTx",
          "explorerAddress",
          "regexAddress",
          "symbol",
          "type",
          "decimals",
          "qqPrefix",
          "status",
          "links",
          "createCoin",
          "consensus"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Readable coin name"
          },
          "website": {
            "type": "string",
            "description": "Project website"
          },
          "description": {
            "type": "string",
            "description": "Short description"
          },
          "explorer": {
            "type": "string",
            "description": "Explorer url"
          },
          "explorerTx": {
            "type": "string",
            "description": "URL to receive tx info"
          },
          "explorerAddress": {
            "type": "string",
            "description": "URL to receive address info"
          },
          "regexAddress": {
            "type": "string",
            "description": "Regex to validate coin address"
          },
          "research": {
            "type": "string",
            "description": "Research url"
          },
          "symbol": {
            "type": "string",
            "description": "Coin ticker"
          },
          "type": {
            "type": "string",
            "enum": ["coin", "ERC20"],
            "description": "Coin or token mainly"
          },
          "decimals": {
            "type": "integer",
            "description": "Decimal places"
          },
          "cryptoTransferDecimals": {
            "type": "integer",
            "description": "Max precision for transactions"
          },
          "minBalance": {
            "type": "number",
            "description": "If there are blockchain limitations on minimum amount for an address"
          },
          "minTransferAmount": {
            "type": "number",
            "description": "If there are blockchain limitations on minimum amount to transfer"
          },
          "fixedFee": {
            "type": "number",
            "description": "If to use fixed tx transfer fee"
          },
          "defaultFee": {
            "type": "number",
            "description": "If tx fee is variable, but an app had not calculated it yet"
          },
          "qqPrefix": {
            "type": "string",
            "description": "QR code prefix for address"
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled"],
            "description": "If an app should process a coin"
          },
          "createCoin": {
            "type": "boolean",
            "description": "If an app should create a coin itself. false means use info only for blockchains."
          },
          "consensus": {
            "type": "string",
            "description": "Blockchain consensus type"
          },
          "blockTimeFixed": {
            "type": "number",
            "description": "Fixed block time in ms"
          },
          "blockTimeAvg": {
            "type": "number",
            "description": "Average block time in ms"
          },
          "newPendingTxFetchInterval": {
            "type": "number",
            "description": "Time in ms between fetching Tx when its current status is Pending for new transactions"
          },
          "oldPendingTxFetchInterval": {
            "type": "number",
            "description": "Time in ms between fetching Tx when its current status is Pending for old transactions"
          },
          "registeredTxFetchInterval": {
            "type": "number",
            "description": "Time in ms between fetching Tx when its current status is Registered"
          },
          "newPendingTxFetchAttempts": {
            "type": "number",
            "description": "Attempts to fetch Tx when its current status is Pending for new transactions"
          },
          "oldPendingTxFetchAttempts": {
            "type": "number",
            "description": "Attempts to fetch Tx when its current status is Pending for old transactions"
          },
          "txConsistencyMaxTime": {
            "type": "number",
            "description": "Time in ms when difference between in-chat transfer and Tx timestamp considered as acceptable"
          },
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            },
            "description": "Node links for API"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "description": "Additional project links"
          }
        }
      },
      "TokenAsset": {
        "type": "object",
        "required": [
          "name",
          "symbol",
          "type",
          "status",
          "contractId",
          "decimals",
          "explorer"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["coin", "ERC20"]
          },
          "status": {
            "type": "string",
            "enum": ["active", "disabled"]
          },
          "contractId": {
            "type": "string"
          },
          "decimals": {
            "type": "integer"
          },
          "explorer": {
            "type": "string"
          }
        }
      },
      "Blockchain": {
        "type": "object",
        "required": [
          "blockchain",
          "type",
          "mainCoin",
          "fees"
        ],
        "properties": {
          "blockchain": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["coin", "ERC20"]
          },
          "mainCoin": {
            "type": "string"
          },
          "fees": {
            "type": "string"
          }
        }
      }
    }
  }
}
